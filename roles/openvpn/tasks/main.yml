---

- name: Exit play if os_family is not Debian
  ansible.builtin.fail:
    msg: "ERROR: os_family of host {{ inventory_hostname }} is not Debian"
  when: ansible_facts['os_family'] != "Debian"

- name: Create clientconfig dir
  ansible.builtin.file:
    path: /etc/openvpn/server/{{ openvpn_server_name }}_clientconfig
    state: directory
    mode: 0755

- name: Add default client config file
  ansible.builtin.template:
    src: templates/etc/openvpn/server/clientconfig/DEFAULT.j2
    dest: /etc/openvpn/server/{{ openvpn_server_name }}_clientconfig/DEFAULT

- name: Add client config file with dns options
  ansible.builtin.template:
    src: templates/etc/openvpn/server/clientconfig/dnsoptions.j2
    dest: /etc/openvpn/server/{{ openvpn_server_name }}_clientconfig/{{ item }}
  loop: "{{ openvpn_push_dns.clientlist }}"

- name: Add script to generate nft mapping from vpn static ips
  ansible.builtin.copy:
    src: files/usr/local/bin/gen_nft_defines
    dest: /usr/local/bin/gen_nft_defines
    backup: no
    mode: "755"

- name: Add systemd unit to call generate script
  ansible.builtin.copy:
    src: etc/systemd/system/openvpnmapping.service
    dest: /etc/systemd/system/openvpnmapping.service
    backup: no

- name: Add systemd path unit to monitor new openvpn connects
  ansible.builtin.copy:
    src: etc/systemd/system/openvpnmapping.path
    dest: /etc/systemd/system/openvpnmapping.path
    backup: no

- name: Activate monitoring of new openvpn connects
  ansible.builtin.systemd:
    name: "openvpnmapping.path"
    enabled: yes
    daemon_reload: yes
    state: started
  ignore_errors: "{{ ansible_check_mode }}"

- name: Add nft rules to accept VPN connections
  ansible.builtin.template:
    src: templates/etc/nftables.conf.d/openvpn.nft.j2
    dest: /etc/nftables.conf.d/openvpn.nft
    backup: no
  register: openvpnnftconfig

- name: Enable / Restart nftables when config files changed
  ansible.builtin.systemd:
    name: "nftables.service"
    state: restarted
    enabled: yes
  when: openvpnnftconfig.changed

- name: Install openvpn
  ansible.builtin.apt:
    name: openvpn
    state: present

- name: ensure dh2048.pem file is present
  ansible.builtin.copy:
    src: "{{ openvpn_dhfile_source }}"
    dest: /etc/openvpn/server/dh2048.pem
    force: no

- name: ensure ca.crt file is present
  ansible.builtin.copy:
    src: "{{ openvpn_cafile_source }}"
    dest: /etc/openvpn/server/ca.crt
    force: no

- name: ensure server.crt is present
  ansible.builtin.copy:
    src: "{{ openvpn_certfile_source }}"
    dest: /etc/openvpn/server/server.crt
    force: no

- name: ensure server.key file is present
  ansible.builtin.copy:
    src: "{{ openvpn_keyfile_source }}"
    dest: /etc/openvpn/server/server.key
    force: no

- name: Install openvpn server config
  ansible.builtin.template:
    src: templates/etc/openvpn/server/server.conf.j2
    dest: /etc/openvpn/server/{{ openvpn_server_name }}.conf
    backup: no
  register: configopenvpn

- name: Start openvpn server
  ansible.builtin.systemd:
    name: openvpn-server@{{ openvpn_server_name }}.service
    state: restarted
    enabled: yes
  when: configopenvpn.changed
